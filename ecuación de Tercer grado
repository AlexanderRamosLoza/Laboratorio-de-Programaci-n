#include<iostream>
#include <conio.h>
#include <math.h>
using namespace std;

double rcu (double E) { //funcion raiz cubica
// calculo por el metodo de tablas exponenciales y logaritmicas
// formula exp(ln(E)/3)
double raiz;
if (E> 0) { // el logaritmo natural puede calculaa E>0
raiz = exp(log(E)/3);
};
if (E== 0){ // el logaritmo natural no puede calcular E=0
raiz = 0;
};
if (E<0) {
raiz =-exp(log(-E)/3); // el logaritmo natural no calcula E < 0
// es necesario poner el signo "-" a E
};
return raiz;	
};

int main(){
double A,B,C,D; // variables de la ecuacion principal
double a1,b1,c1;
double p,q,dis; // variables
double u,v;
double x,y,z; // valores de las raices
double pi,t; // pi y margen de error

cout<<" tercer ejercicio °Ecuacion de tercer grado° "<<endl;
cout<<" Dada la ecuacion Ax^3 + Bx^2 + Cx + D = 0 "<<endl;
cout<<" Ingrese valor A :"; cin>> A;
cout<<" Ingrese valor B :"; cin>> B;
cout<<" Ingrese valor C :"; cin>> C;
cout<<" Ingrese valor D :"; cin>> D;

cout.precision(3); // muestra la cantidad de decimales deseada
t = 0.0000000009; // tolerancia o margen de error
pi = 3.141592654; // el numero pi
a1 = B/A;
b1 = C/A;
c1 = D/A;
p = b1 - (a1*a1)/3; // variable p del metodo
q = (2*a1*a1*a1)/27 - (a1*b1)/3 + c1; // variable q del metodo
dis = (q*q) + (4*p*p*p)/27; // discriminante

if ( dis >= t ) { //discriminante > 0
u = rcu(0.5*(-q + sqrt(dis))); // variable u del metodo de cardano
v = rcu(-0.5*(q + sqrt(dis))); // variable v del metodo de cardano
x = u + v -(a1/3);
y = (-0.5)*(u+v) -(a1/3);
z = (0.5)*sqrt(3)*(u-v);
cout<<" La ecuacion tiene una raiz real y 2 complejas "<<endl;
cout<<" X1 :"<<x<<endl;
cout<<" X2 :"<<y<<" + "<<fabs(z)<<"i"<<endl;
cout<<" X3 :"<<y<<" - "<<fabs(z)<<"i"<<endl;
};

if ( dis <= -t ) { // discriminate < 0
x = (2*sqrt(-p/3))*cos(acos((-q/2)*sqrt(-27/(p*p*p)))/3) -(a1/3);
y = (2*sqrt(-p/3))*cos(acos((-q/2)*sqrt((-27)/(p*p*p)))/3 +2*pi/3) -(a1/3);
z = (2*sqrt(-p/3))*cos(acos((-q/2)*sqrt((-27)/(p*p*p)))/3 +4*pi/3) -(a1/3);
cout<<" La ecuacion tiene 3 raices distintas "<<endl;
cout<<" X1 :"<<x<<endl;
cout<<" X2 :"<<y<<endl;
cout<<" X3 :"<<z<<endl;
};

getch(); // Hace una pausa al programa
return 0;
} //fin del programa
